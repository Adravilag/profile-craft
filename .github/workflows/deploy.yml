name: 🚀 Deploy CV Maker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  # Job para detectar cambios
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
      packages: ${{ steps.changes.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'apps/frontend/**'
            backend:
              - 'apps/backend/**'
            packages:
              - 'packages/**'

  # Build y test de packages compartidos
  packages:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.packages == 'true' || needs.changes.outputs.frontend == 'true' || needs.changes.outputs.backend == 'true'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build packages
        run: npm run setup:packages
        
      - name: 🧪 Type check packages
        run: npm run type-check --workspace=@cv-maker/shared && npm run type-check --workspace=@cv-maker/ui

  # Deploy del Backend a Render
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [changes, packages]
    if: needs.changes.outputs.backend == 'true' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build backend
        run: npm run build:backend
        
      - name: 🧪 Type check backend
        run: npm run type-check --workspace=@cv-maker/backend
        
      - name: 📝 Backend deployment info
        run: |
          echo "🎯 Backend changes detected!"
          echo "✅ Render will automatically deploy from this push"
          echo "🔗 Check deployment status at: https://render.com"

  # Deploy del Frontend a Vercel
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [changes, packages]
    if: needs.changes.outputs.frontend == 'true' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build frontend
        run: npm run build:frontend
        
      - name: 🧪 Type check frontend
        run: npm run type-check --workspace=@cv-maker/frontend
        
      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/frontend
          vercel-args: '--prod'

  # Deploy alternativo a GitHub Pages
  deploy-gh-pages:
    runs-on: ubuntu-latest
    needs: [changes, packages]
    if: needs.changes.outputs.frontend == 'true' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build frontend
        run: npm run build:frontend
        
      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./apps/frontend/dist
          publish_branch: gh-pages
          
  # Job de notificación
  notify:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: 📢 Deployment Summary
        run: |
          echo "🎉 CV Maker Deployment Summary"
          echo "==============================="
          echo "Backend: ${{ needs.deploy-backend.result }}"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"
          echo "==============================="
          echo "✅ Deployment completed!"
